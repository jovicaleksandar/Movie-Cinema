/*
Deployment script for NewBioskop

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "NewBioskop"
:setvar DefaultFilePrefix "NewBioskop"
:setvar DefaultDataPath "C:\Users\Coa\Desktop\SQLServer\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Users\Coa\Desktop\SQLServer\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
/*
The type for column billamount in table [dbo].[bill] is currently  BIGINT NULL but is being changed to  INT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[bill])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column drinkprice in table [dbo].[drink] is currently  BIGINT NULL but is being changed to  INT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[drink])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column snackprice in table [dbo].[snack] is currently  BIGINT NULL but is being changed to  INT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[snack])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The type for column ticketprice in table [dbo].[ticket] is currently  BIGINT NULL but is being changed to  INT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[ticket])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Altering [dbo].[bill]...';


GO
ALTER TABLE [dbo].[bill] ALTER COLUMN [billamount] INT NULL;

ALTER TABLE [dbo].[bill] ALTER COLUMN [billdatetime] DATE NULL;


GO
PRINT N'Altering [dbo].[drink]...';


GO
ALTER TABLE [dbo].[drink] ALTER COLUMN [drinkprice] INT NULL;


GO
PRINT N'Altering [dbo].[snack]...';


GO
ALTER TABLE [dbo].[snack] ALTER COLUMN [snackprice] INT NULL;


GO
PRINT N'Altering [dbo].[ticket]...';


GO
ALTER TABLE [dbo].[ticket] ALTER COLUMN [ticketdatetime] DATE NULL;

ALTER TABLE [dbo].[ticket] ALTER COLUMN [ticketprice] INT NULL;


GO
PRINT N'Creating [dbo].[BillTrigger]...';


GO
CREATE TRIGGER [BillTrigger]
ON [dbo].bill

FOR INSERT
AS

BEGIN
	
	DECLARE @tableID INT;
	DECLARE @billID INT;
	DECLARE @billAmount INT;

	SELECT @tableID = i.table_tableid from inserted i;
	SELECT @billID = i.billid FROM inserted i;
	SELECT @billAmount = i.billamount FROM inserted i;

		if (@tableID < 4)
			BEGIN
				SELECT @billAmount = @billAmount * 2

				SET @billamount = @billAmount

				INSERT INTO bill(billamount) VALUES (@billAmount)
			END

END
GO
PRINT N'Creating [dbo].[UkupnaVrednostRacuna]...';


GO
CREATE FUNCTION [dbo].[UkupnaVrednostRacuna]
(
	@param1 int,
	@param2 int
)
RETURNS INT
AS
BEGIN
DECLARE
	@retVal AS INT;

	SELECT @retVal 
	RETURN retVal
END
GO
PRINT N'Update complete.';


GO
